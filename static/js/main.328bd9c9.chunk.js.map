{"version":3,"sources":["constants/style.js","component/TodoItems.js","component/TodoFooter.js","todo.js","index.js"],"names":["GlobalStyle","createGlobalStyle","TodoItem","styled","li","props","theme","font_size","text","colors","text_primary","TodoToggle","input","Icon","span","$isDone","TodoText","p","DeleteButton","TextInput","InputBar","handleEnterUpdate","useState","value","setValue","type","onChange","e","target","onKeyDown","keyCode","TodoItems","key","todo","handleDeleteTodo","handleToggleIsDone","handleUpdateTodo","content","setContent","id","for","isDone","onClick","TodoFooterBar","footer","TodoCount","div","TodoFooter","todos","handleChangeFilter","handleClearComplete","count","i","length","getActiveNumber","TodoWrapper","TodoTitle","title_primary","title","TodoBody","bg_colors","bg_primary","TodoInput","TodoList","ul","todoId","todoData","window","localStorage","getItem","Todo","filter","setFilter","JSON","parse","setTodos","map","useEffect","setItem","stringify","writeTodosToLocalStorage","placeholder","ReactDOM","render","document","getElementById"],"mappings":"swBAEA,IAsCeA,EAtCKC,YAAH,K,ijDCEjB,IAAMC,EAAWC,IAAOC,GAAV,KAEC,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,UAAUC,QAEnC,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,OAAOC,gBAoBjCC,EAAaR,IAAOS,MAAV,KAcVC,EAAOV,IAAOW,KAAV,KAMN,SAAAT,GAAK,OAAIA,EAAMU,QAAN,yNAUPC,EAAWb,IAAOc,EAAV,KAEV,SAAAZ,GAAK,OAAIA,EAAMU,SAAN,kDAMPG,EAAef,IAAOS,MAAV,KAcZO,EAAYhB,IAAOS,MAAV,KAUTQ,EAAW,SAAC,GAAmC,IAAhCZ,EAA+B,EAA/BA,KAAMa,EAAyB,EAAzBA,kBAAyB,EACxBC,mBAASd,GADe,mBAC3Ce,EAD2C,KACpCC,EADoC,KAMlD,OACE,cAACL,EAAD,CAAWM,KAAK,OACdF,MAAOA,EACPG,SAPsB,SAAAC,GACxBH,EAASG,EAAEC,OAAOL,QAOhBM,UAAY,SAAAF,GACQ,KAAdA,EAAEG,SAA4B,KAAVP,GACtBF,EAAkBE,OAwCbQ,EAjCG,SAAC,GAA4E,EAAzEC,IAA0E,IAArEC,EAAoE,EAApEA,KAAMC,EAA8D,EAA9DA,iBAAkBC,EAA4C,EAA5CA,mBAAoBC,EAAwB,EAAxBA,iBAAwB,EAC/Dd,mBAASW,EAAKI,SADiD,mBACtFA,EADsF,KAC7EC,EAD6E,KAU7F,OACE,eAACpC,EAAD,WACE,cAACS,EAAD,CAAac,KAAK,WAAWc,GAAIN,EAAKM,KACtC,uBAAOC,IAAKP,EAAKM,GAAjB,SACE,cAAC1B,EAAD,CAAOE,QAASkB,EAAKQ,OAAQC,QAAS,WACpCP,EAAmBF,EAAKM,SAG5B,cAACvB,EAAD,CACED,QAASkB,EAAKQ,OACdC,QAlBqB,WACzBJ,EAAW,KAeT,SAKED,GAAW,cAAC,EAAD,CAAU7B,KAAMyB,EAAKI,QAAShB,kBAlBrB,SAAAE,GACxBa,EAAiBH,EAAKM,GAAIhB,GAC1Be,EAAWf,QAmBT,cAACL,EAAD,CAAcO,KAAK,SAASiB,QAAS,WACnCR,EAAiBD,EAAKM,W,g2BCpI9B,IAAMI,EAAgBxC,IAAOyC,OAAV,KA6BbC,EAAY1C,IAAO2C,IAAV,KAgDAC,EA/BI,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,MAAOC,EAA8C,EAA9CA,mBAAoBC,EAA0B,EAA1BA,oBAS/C,OACE,eAACP,EAAD,WACE,eAACE,EAAD,WACE,iCAXkB,SAAAG,GAEtB,IADA,IAAIG,EAAQ,EACHC,EAAI,EAAGA,EAAIJ,EAAMK,OAAQD,IAC3BJ,EAAMI,GAAGX,QAAQU,IAExB,OAAOA,EAMOG,CAAgBN,KAC1B,8CAEF,+BACE,oBAAIN,QAAS,WAAQO,EAAmB,QAAxC,SACE,sCAEF,oBAAIP,QAAS,WAAQO,EAAmB,WAAxC,SACE,yCAEF,oBAAIP,QAAS,WAAQO,EAAmB,aAAxC,SACE,+CAGJ,wBAAQP,QAAUQ,EAAlB,iC,u4BCtEN,IAAMK,EAAcpD,IAAO2C,IAAV,KAEXU,EAAYrD,IAAO2C,IAAV,KACJ,SAAAzC,GAAK,OAAIA,EAAMC,MAAMG,OAAOgD,iBACxB,SAAApD,GAAK,OAAIA,EAAMC,MAAMC,UAAUmD,SAOxCC,EAAWxD,IAAO2C,IAAV,KACE,SAAAzC,GAAK,OAAIA,EAAMC,MAAMsD,UAAUC,cAMzCC,EAAY3D,IAAOS,MAAV,KAMA,SAAAP,GAAK,OAAIA,EAAMC,MAAMC,UAAUK,SAUxCmD,EAAW5D,IAAO6D,GAAV,KAMVC,EAAS,EACTC,EAAWC,OAAOC,aAAaC,QAAQ,UAAY,GA2GxCC,EAzGF,WAAO,IAAD,EACShD,mBAAS,IADlB,mBACVC,EADU,KACHC,EADG,OAMWF,mBAAS,OANpB,mBAMViD,EANU,KAMFC,EANE,OAWSlD,oBAAS,WAWjC,OAVI4C,GACFA,EAAWO,KAAKC,MAAMR,GACtBD,EAASC,EAASA,EAASb,OAAS,GAAGd,GAAK,GAE5C2B,EAAW,CAAC,CACV3B,GAAI,EACJF,QAAS,WACTI,QAAQ,IAGLyB,KAtBQ,mBAWVlB,EAXU,KAWH2B,EAXG,KAqCXzC,EAAmB,SAAAK,GACvBoC,EAAS3B,EAAMuB,QAAO,SAAAtC,GAAI,OAAIA,EAAKM,KAAOA,OAEtCJ,EAAqB,SAAAI,GACzBoC,EAAS3B,EAAM4B,KAAI,SAAA3C,GACjB,OAAIA,EAAKM,KAAOA,EAAWN,EACpB,2BACFA,GADL,IAEEQ,QAASR,EAAKQ,cAOdL,EAAmB,SAACG,EAAIhB,GAC5BoD,EAAS3B,EAAM4B,KAAI,SAAA3C,GACjB,OAAIA,EAAKM,KAAOA,EAAWN,EACpB,2BACFA,GADL,IAEEI,QAASd,SASf,OAJAsD,qBAAU,YArEqB,SAAE7B,GACjCmB,OAAOC,aAAaU,QAAQ,QAASL,KAAKM,UAAU/B,IAqElDgC,CAAyBhC,KACxB,CAACA,IAGF,eAACO,EAAD,WACE,cAAC,EAAD,IACA,cAACC,EAAD,oBAGA,eAACG,EAAD,WACE,cAACG,EAAD,CACEmB,YAAY,yBACZ1D,MAAOA,EACPG,SA1EkB,SAAAC,GACxBH,EAASG,EAAEC,OAAOL,QA0EZM,UAAW,SAAAF,GACS,KAAdA,EAAEG,SAA4B,KAAVP,IApDhCoD,GAAS,WAEP,OADAV,IACM,GAAN,mBAAWjB,GAAX,CAAkB,CAChBT,GAAI0B,EACJ5B,QAASd,EACTkB,QAAQ,QAGZjB,EAAS,IACTyC,QA+CI,cAACF,EAAD,UACIf,EAAMuB,QAAO,SAAAtC,GACX,MAAe,QAAXsC,EAAyBtC,EACX,aAAXsC,EAAwBtC,EAAKQ,QAAUR,EAAKQ,UAClDmC,KAAI,SAAA3C,GAAI,OAAI,cAAC,EAAD,CAEfA,KAAMA,EACNC,iBAAkBA,EAClBC,mBAAoBA,EACpBC,iBAAkBA,GAJbH,EAAKM,SAQd,cAAC,EAAD,CACES,MAAOA,EACPC,mBA1FmB,SAAA1B,GACzBiD,EAAUjD,IA0FJ2B,oBAjDoB,WAC1ByB,EAAS3B,EAAMuB,QAAO,SAAAtC,GAAI,OAAKA,EAAKQ,qBC/ExCyC,IAASC,OACP,cAAC,IAAD,CAAe7E,MAhBH,CACZG,OAAQ,CACNgD,cAAe,0BACf/C,aAAc,WAEhBkD,UAAW,CACTC,WAAY,QAEdtD,UAAW,CACTmD,MAAO,OACPlD,KAAM,SACNI,MAAO,WAKT,SACE,cAAC,EAAD,MAGFwE,SAASC,eAAe,W","file":"static/js/main.328bd9c9.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\"\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n  }\n\n  li {\n    list-style-type: none;\n  }\n  \n  a {\n    text-decoration: none;\n  \n    &:hover {\n      text-decoration: none;\n    }\n  }\n  \n  a:hover {\n    cursor: pointer;\n  }\n\n  button {\n    border: none;\n    background-color: #fff;\n    cursor: pointer;\n  }\n\n  button:hover, button:focus {\n    outline: none;\n  }\n\n  body {\n    font:  14px 'Helvetica Neue', Helvetica, Arial, sans-serif;\n    line-height: 1.4em;\n  }\n`\nexport default GlobalStyle;\nexport const MEDIA_QUERY_MD = '@media scream and (min-width: 768px)';\nexport const MEDIA_QUERY_LG = '@media scream and (min-width: 1000px)';\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport GlobalStyle from './../constants/style';\n\nconst TodoItem = styled.li`\n  position: relative;\n  font-size: ${props => props.theme.font_size.text};\n  font-weight: lighter;\n  color: ${props => props.theme.colors.text_primary};\n  letter-spacing: 0.2em;\n  list-style-type: none;\n  text-align: left;\n  margin: 15px;\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid rgba(0,0,0,0.05);\n  & p {\n    margin: 0;\n    padding: 0.3rem 0;\n  }\n  &:hover {\n    text-shadow: 0 0 0.1px rgba(0,0,0,1);\n    input[type=\"button\"] {\n      display: unset;\n    }\n  }\n`;\n\nconst TodoToggle = styled.input`\n  display: none;\n  & + label {\n    max-width: 460px;\n    overflow: hidden;\n    word-break: break-all;\n    word-wrap: break-word; \n    padding: 0.1em;\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    margin: 0;\n`;\n\nconst Icon = styled.span`\n  min-width: 20px;\n  min-height: 20px;\n  cursor: pointer;\n  filter: opacity(0.3);\n  ${\n    props => props.$isDone ? `\n      background: url(checked.svg) center/cover no-repeat;\n      margin: 7.5px 15px 7.5px 5px;\n    ` : `\n      background: url(unchecked.svg) center/cover no-repeat;\n      margin: 7.5px 15px 7.5px 5px;\n    `\n  }\n`;\n\nconst TodoText = styled.p`\n  ${\n    props => props.$isDone && `\n      text-decoration: line-through;\n    `\n  }\n`;\n\nconst DeleteButton = styled.input`\n  display: none;\n  position: absolute;\n  right: 30px;\n  top: 6px;\n  border: none;\n  outline: none;\n  background: url(delete.svg) center/cover no-repeat;\n  filter: opacity(0.3);\n  width: 20px;\n  height: 20px;\n  cursor: pointer;\n`;\n\nconst TextInput = styled.input`\n  width: 100%;\n  padding: 0.1em;\n  font-size: 18px;\n  font-weight: lighter;\n  letter-spacing: 0.2em;\n  line-height: 1.4em;\n  outline: none;\n`;\n\nconst InputBar = ( { text, handleEnterUpdate } ) => {\n  const [value, setValue] = useState(text);\n  const handleInputChange = e => {\n    setValue(e.target.value)\n  }\n\n  return (\n    <TextInput type=\"text\" \n      value={value} \n      onChange={ handleInputChange } \n      onKeyDown={ e => {\n        if (e.keyCode === 13 && value !== '') {\n          handleEnterUpdate(value)\n        }\n      }}\n    />\n  )\n}\n\nconst TodoItems = ( { key, todo, handleDeleteTodo, handleToggleIsDone, handleUpdateTodo } ) => {\n  const [content, setContent] = useState(todo.content);\n  const handleClickContent = () => {\n    setContent('');\n  }\n  const handleEnterUpdate = value => {\n    handleUpdateTodo(todo.id, value)\n    setContent(value);\n  }\n\n  return (\n    <TodoItem>\n      <TodoToggle  type='checkbox' id={todo.id} />\n      <label for={todo.id}>\n        <Icon  $isDone={todo.isDone} onClick={() => {\n          handleToggleIsDone(todo.id)\n        }}></Icon>\n      </label>\n      <TodoText \n        $isDone={todo.isDone}\n        onClick={handleClickContent}\n      >\n      {\n        content || <InputBar text={todo.content} handleEnterUpdate={handleEnterUpdate} />\n      }\n      </TodoText>\n      <DeleteButton type='button' onClick={() => {\n        handleDeleteTodo(todo.id)\n      }} />\n    </TodoItem>\n  )\n}\n\nexport default TodoItems;","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport GlobalStyle from './../constants/style';\n\nconst TodoFooterBar = styled.footer`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-weight: lighter;\n  color: #777;\n  padding: 10px;\n  & ul {\n    display: flex;\n    margin: 0;\n    & li {\n      a {\n        color: #777;\n        margin: 3px;\n        padding: 3px 7px;\n        border: 1px solid transparent;\n        border-radius: 3px;\n      }\n      .selected {\n        border: 0.5px solid rgba(175, 47, 47, 0.2);\n      }\n    } \n  }\n  & button {\n    margin-right: 5px;\n    color: #777;\n  }\n`;\n\nconst TodoCount = styled.div`\n  display: flex;\n  align-items: center;\n  font-weight: lighter;\n  color: $lightColor_02;\n  margin-left: 20px;\n\n  & strong {\n    margin: 5px;\n    font-weight: lighter;\n  }\n\n  & p {\n    margin: 0;\n  }\n`;\n\nconst TodoFooter = ({ todos, handleChangeFilter, handleClearComplete }) => {\n  const getActiveNumber = todos => {\n    let count = 0;\n    for (let i = 0; i < todos.length; i++) {\n      if (!todos[i].isDone) count++;\n    }\n    return count;\n  };\n\n  return (\n    <TodoFooterBar>\n      <TodoCount>\n        <strong>{ getActiveNumber(todos) }</strong>\n        <p>items left</p>\n      </TodoCount>\n      <ul>\n        <li onClick={() => { handleChangeFilter('all') }}>\n          <a>All</a>\n        </li>\n        <li onClick={() => { handleChangeFilter('active') }}>\n          <a>Active</a>\n        </li>\n        <li onClick={() => { handleChangeFilter('complete') }}>\n          <a>Completed</a>\n        </li>\n      </ul>\n      <button onClick={ handleClearComplete }>Clear completed</button>\n    </TodoFooterBar>\n  )\n}\n\nexport default TodoFooter;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport GlobalStyle from './constants/style';\nimport TodoItems from './component/TodoItems';\nimport TodoFooter from './component/TodoFooter';\n\nconst TodoWrapper = styled.div``;\n\nconst TodoTitle = styled.div`\n  color: ${props => props.theme.colors.title_primary};\n  font-size: ${props => props.theme.font_size.title};\n  text-align: center;\n  margin: 50px;\n  font-weight: 500;\n  line-height: 1.2;\n`;\n\nconst TodoBody = styled.div`\n  background: ${props => props.theme.bg_colors.bg_primary};\n  width: 550px;\n  margin: 30px auto;\n  box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2), 0 25px 50px 0 rgba(0,0,0,0.1);\n`;\n\nconst TodoInput = styled.input`\n  padding: 16px 16px 16px 60px;\n  border: none;\n  box-shadow: inset 0 -2px 1px rgba(0,0,0,0.03);\n  outline: none;\n  width: 100%;\n  font-size: ${props => props.theme.font_size.input};\n  font-weight: lighter;\n  letter-spacing: 0.3rem;\n  line-height: 1rem;\n  &::placeholder {\n    color: #a0969638;\n    font-weight: lighter;\n  }\n`;\n\nconst TodoList = styled.ul``;\n\nconst writeTodosToLocalStorage = ( todos ) => {\n  window.localStorage.setItem('todos', JSON.stringify(todos));\n}\n\nlet todoId = 1;\nlet todoData = window.localStorage.getItem('todos') || '';\n\nconst Todo = () => {\n  const [value, setValue] = useState('');\n  const handleInputChange = e => {\n    setValue(e.target.value)\n  }\n\n  const [filter, setFilter] = useState('all');\n  const handleChangeFilter = value => {\n    setFilter(value);\n  }\n\n  const [todos, setTodos] = useState(() => {\n    if (todoData) {\n      todoData = JSON.parse(todoData);\n      todoId = todoData[todoData.length - 1].id + 1;\n    } else {\n      todoData = [{\n        id: 0,\n        content: 'new todo',\n        isDone: false\n      }]\n    }\n    return todoData;\n  });\n\n  const handleCreateTodo = e => {\n    setTodos(() => {\n      todoId++\n      return [...todos, {\n        id: todoId,\n        content: value,\n        isDone: false\n      }];\n    });\n    setValue('');\n    todoId++;\n  }\n  const handleDeleteTodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id))\n  }\n  const handleToggleIsDone = id => {\n    setTodos(todos.map(todo => {\n      if (todo.id !== id) return todo\n      return {\n        ...todo,\n        isDone: !todo.isDone\n      }\n    }))\n  }\n  const handleClearComplete = () => {\n    setTodos(todos.filter(todo => !todo.isDone))\n  }\n  const handleUpdateTodo = (id, value) => {\n    setTodos(todos.map(todo => {\n      if (todo.id !== id) return todo\n      return {\n        ...todo,\n        content: value\n      }\n    }))\n  }\n\n  useEffect(() => {\n    writeTodosToLocalStorage(todos);\n  }, [todos])\n\n  return (\n    <TodoWrapper>\n      <GlobalStyle />\n      <TodoTitle>\n        todos\n      </TodoTitle>\n      <TodoBody>\n        <TodoInput \n          placeholder='What needs to be done?' \n          value={value} \n          onChange={handleInputChange} \n          onKeyDown={e => { \n            if (e.keyCode === 13 && value !== '') {\n            handleCreateTodo(e);\n          }}}\n        />\n        <TodoList>\n          { todos.filter(todo => {\n              if (filter === 'all') return todo\n              return filter === 'complete' ? todo.isDone : !todo.isDone\n            }).map(todo => <TodoItems \n            key={todo.id} \n            todo={todo} \n            handleDeleteTodo={handleDeleteTodo}\n            handleToggleIsDone={handleToggleIsDone}\n            handleUpdateTodo={handleUpdateTodo} \n            />\n          )}\n        </TodoList>\n        <TodoFooter\n          todos={todos}\n          handleChangeFilter={handleChangeFilter}\n          handleClearComplete={handleClearComplete}\n        />\n      </TodoBody>\n    </TodoWrapper>\n  )\n}\n\nexport default Todo;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Todo from './todo';\nimport { ThemeProvider } from 'styled-components';\n\nconst theme = {\n  colors: {\n    title_primary: 'rgba(175, 47, 47, 0.15)',\n    text_primary: '#4d4d4d'\n  },\n  bg_colors: {\n    bg_primary: '#fff'\n  },\n  font_size: {\n    title: '6rem',\n    text: '1.4rem',\n    input: '1.5rem'\n  },\n};\n\nReactDOM.render(\n  <ThemeProvider theme={ theme }>\n    <Todo />\n  </ThemeProvider>\n  ,\n  document.getElementById('root')\n);"],"sourceRoot":""}